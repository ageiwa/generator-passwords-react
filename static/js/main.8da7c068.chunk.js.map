{"version":3,"sources":["components/Header/index.js","components/Password/index.js","components/Title/index.js","components/LengthPassword/index.js","components/Setting/index.js","components/BtnGenerate/index.js","App.js","index.js"],"names":["Header","className","Password","props","useState","password","setPassword","refCopied","useRef","refClickToCopy","newPassword","current","classList","remove","add","onClick","ClipboardJS","ref","Title","text","LengthPassword","background","progressLine","setProgressLine","onInput","e","inputValue","target","value","progress","updateLength","style","type","min","max","defaultValue","Setting","btnClName","switchClName","onSwitch","set","activeSet","btnSwitch","undefined","contains","nextElementSibling","parentElement","updateSetting","subtitle","BtnGenerate","lengthPassword","includeUppercase","includeLowercase","includeNumbers","includeSymbols","randomUpperLetter","upperLetters","Math","floor","random","length","randomLowerLetter","lowerLetters","randomNumber","numbers","randomSymbols","symbols","i","nextChar","updatePass","App","lengthPass","setLengthPass","includeUp","setIncludeUp","includeLow","setIncludeLow","includeNum","setIncludeNum","includeSym","setIncludeSym","countSets","settingsProps","id","map","settingProp","pass","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.8da7c068.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nconst Header = () => {\r\n    return <p className=\"header\">Generate Password</p>\r\n}\r\n\r\nexport default Header;","import React, { useRef, useState } from 'react';\r\nimport ClipboardJS from 'clipboard';\r\nimport './style.css';\r\n\r\nconst Password = (props) => {\r\n    const [password, setPassword] = useState('CLICK GENERATE');\r\n\r\n    const refCopied = useRef(null);\r\n    const refClickToCopy = useRef(null);\r\n\r\n    if (props.newPassword !== password) {\r\n        setPassword(props.newPassword);\r\n\r\n        refCopied.current.classList.remove('info-copied-on');\r\n        refClickToCopy.current.classList.add('info-click-to-copy-on');\r\n    }\r\n\r\n    function copyPassword() {\r\n        if (password !== 'CLICK GENERATE') {\r\n            new ClipboardJS('.password-container');\r\n\r\n            refCopied.current.classList.add('info-copied-on');\r\n            refClickToCopy.current.classList.remove('info-click-to-copy-on');\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"password-container\" onClick={copyPassword} data-clipboard-text={password}>\r\n            <span className=\"info-copied\" ref={refCopied}>copied</span>\r\n            <p className=\"password\">{password}</p>\r\n            <span className=\"info-click-to-copy\" ref={refClickToCopy}>click to copy</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Password;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Title = (props) => {\r\n    return <p className=\"title\">{props.text}</p>\r\n}\r\n\r\nexport default Title;","import React, { useState } from 'react';\r\nimport './style.css';\r\n\r\nconst LengthPassword = (props) => {\r\n    const [progressLine, setProgressLine] = useState({background: 'linear-gradient(90deg, #47aadd 43%, #fff 43%)'});\r\n\r\n    function handleInput(e) {\r\n        let inputValue = e.target.value,\r\n            progress = (100 * (inputValue - 4)) / (32 - 4),\r\n            styleLine = 'linear-gradient(90deg, #47aadd ' + progress + '%, #fff ' + progress + '%)';\r\n\r\n        setProgressLine({background: styleLine});\r\n        props.updateLength(inputValue);\r\n    }\r\n\r\n    return (\r\n        <div className=\"length-password-container\">\r\n            <p className=\"value-range\">4</p>\r\n            <input \r\n                onInput={handleInput}\r\n                style={progressLine}\r\n                className=\"range-password\" \r\n                type=\"range\"\r\n                min=\"4\"\r\n                max=\"32\"\r\n                defaultValue=\"16\"\r\n            ></input>\r\n            <p className=\"value-range\">32</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LengthPassword;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Setting = (props) => {\r\n    let btnClName = 'btn-switch',\r\n        switchClName = 'switch-slider';\r\n\r\n    if (props.set === true) {\r\n        btnClName = 'btn-switch btn-switch-on';\r\n        switchClName = 'switch-slider switch-slider-on';\r\n    }\r\n    if (props.set === true && props.activeSet === 1) {\r\n        btnClName = 'btn-switch btn-switch-on btn-switch-block';\r\n        switchClName = 'switch-slider switch-slider-on switch-slider-block';\r\n    }\r\n\r\n    function onSwitch(e) {\r\n        if (props.set === true && props.activeSet === 1) return false;\r\n\r\n        let btnSwitch = undefined;\r\n\r\n        if (e.target.classList.contains('setting-subtitle')) btnSwitch = e.target.nextElementSibling;\r\n        else if (e.target.classList.contains('btn-switch')) btnSwitch = e.target;\r\n        else if (e.target.classList.contains('switch-slider')) btnSwitch = e.target.parentElement;\r\n\r\n        if (!btnSwitch.classList.contains('btn-switch-on')) props.updateSetting(true);\r\n        else props.updateSetting(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"setting-container\">\r\n            <p className=\"setting-subtitle\" onClick={onSwitch}>{props.subtitle}</p>\r\n            <div className={btnClName} onClick={onSwitch}>\r\n                <div className={switchClName}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Setting;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst BtnGenerate = (props) => {\r\n    const lengthPassword = props.lengthPassword;\r\n\r\n    const includeUppercase = props.includeUppercase;\r\n    const includeLowercase = props.includeLowercase;\r\n    const includeNumbers = props.includeNumbers;\r\n    const includeSymbols = props.includeSymbols;\r\n\r\n    function randomUpperLetter() {\r\n        let upperLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\r\n            index = Math.floor(Math.random() * ((upperLetters.length-1) - 0 + 1)) + 0;\r\n\r\n        return upperLetters[index];\r\n    }\r\n\r\n    function randomLowerLetter() {\r\n        let lowerLetters = 'abcdefghijklmnopqrstuvwxyz',\r\n            index = Math.floor(Math.random() * ((lowerLetters.length-1) - 0 + 1)) + 0;\r\n\r\n        return lowerLetters[index];\r\n    }\r\n\r\n    function randomNumber() {\r\n        let numbers = '0123456789',\r\n            index = Math.floor(Math.random() * ((numbers.length-1) - 0 + 1)) + 0;    \r\n\r\n        return numbers[index];\r\n    }\r\n\r\n    function randomSymbols() {\r\n        let symbols = '`~!@\"#№$;%^:&?*()_-+={}[]|<>,./',\r\n            index = Math.floor(Math.random() * ((symbols.length-1) - 0 + 1)) + 0;\r\n\r\n        return symbols[index];\r\n    }\r\n\r\n    function generatePassword() {\r\n        let password = '';\r\n\r\n        for (let i = 0; i < lengthPassword; i++) {\r\n            let nextChar = Math.floor(Math.random() * (4 - 1 + 1)) + 1;\r\n\r\n            if (includeUppercase && nextChar === 1) {\r\n                password += randomUpperLetter();\r\n            }\r\n            else if (includeLowercase && nextChar === 2) {\r\n                password += randomLowerLetter();\r\n            }\r\n            else if (includeNumbers && nextChar === 3) {\r\n                password += randomNumber();\r\n            }\r\n            else if (includeSymbols && nextChar === 4) {\r\n                password += randomSymbols();\r\n            }\r\n            else i--;\r\n        }\r\n\r\n        props.updatePass(password);\r\n    }\r\n\r\n    return <button className=\"btn-generate\" onClick={generatePassword}>GENERATE PASSWORD</button>;\r\n}\r\n\r\nexport default BtnGenerate;","import React, { useState } from 'react';\r\nimport './style.css';\r\nimport Header from './components/Header/index';\r\nimport Password from './components/Password/index';\r\nimport Title from './components/Title/index';\r\nimport LengthPassword from './components/LengthPassword/index';\r\nimport Setting from './components/Setting/index';\r\nimport BtnGenerate from './components/BtnGenerate/index';\r\n\r\nconst App = () => {\r\n    const [password, setPassword] = useState('CLICK GENERATE');\r\n    const updatePassword = (pass) => setPassword(pass);\r\n\r\n    const [lengthPass, setLengthPass] = useState(16);\r\n    const updateLengthPass = (length) => setLengthPass(length);\r\n\r\n    const [includeUp, setIncludeUp] = useState(true);\r\n    const updateIncludeUp = (set) => setIncludeUp(set);\r\n\r\n    const [includeLow, setIncludeLow] = useState(false);\r\n    const updateIncludeLow = (set) => setIncludeLow(set);\r\n\r\n    const [includeNum, setIncludeNum] = useState(false);\r\n    const updateIncludeNum = (set) => setIncludeNum(set);\r\n\r\n    const [includeSym, setIncludeSym] = useState(false);\r\n    const updateIncludeSym = (set) => setIncludeSym(set);\r\n\r\n    let countSets = includeUp + includeLow + includeNum + includeSym;\r\n\r\n    const settingsProps = [\r\n        {id: 1, subtitle: 'Include Uppercase', updateSetting: updateIncludeUp, set: includeUp},\r\n        {id: 2, subtitle: 'Include Lowercase', updateSetting: updateIncludeLow, set: includeLow},\r\n        {id: 3, subtitle: 'Include Numbers', updateSetting: updateIncludeNum, set: includeNum},\r\n        {id: 4, subtitle: 'Include Symbols', updateSetting: updateIncludeSym, set: includeSym},\r\n    ]\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Header />\r\n            <div className=\"wrapper\">\r\n                <Password newPassword={password} />\r\n            </div>\r\n            <Title text={\"LENGTH: \" + lengthPass} />\r\n            <div className=\"wrapper\">\r\n                <LengthPassword updateLength={updateLengthPass} />\r\n            </div>\r\n            <Title text=\"SETTINGS:\" />\r\n            <div className=\"wrapper\">\r\n\r\n                {settingsProps.map(settingProp => (\r\n                    <Setting\r\n                        key={settingProp.id}\r\n                        subtitle={settingProp.subtitle}\r\n                        updateSetting={settingProp.updateSetting}\r\n                        set={settingProp.set}\r\n                        activeSet={countSets}\r\n                    />\r\n                ))}\r\n                \r\n                <BtnGenerate\r\n                    lengthPassword={lengthPass}\r\n                    includeUppercase={includeUp}\r\n                    includeLowercase={includeLow}\r\n                    includeNumbers={includeNum}\r\n                    includeSymbols={includeSym}\r\n                    updatePass={updatePassword}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDom.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}